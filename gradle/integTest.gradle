subprojects {
    sourceSets {
        // IntelliJ handles only one directory for test sources,
        // so 'integTest' classes are put into the test classes directory.
        integTest {
            java.srcDir file('src/integTest/java')
            resources.srcDir file('src/integTest/resources')
        }
    }

    task integTest(type: Test) {
        group = LifecycleBasePlugin.VERIFICATION_GROUP
        description = 'Runs the integration tests.'

        testClassesDirs = sourceSets.integTest.output.classesDirs
        classpath = sourceSets.integTest.runtimeClasspath
        binResultsDir = file("${buildDir}/integTest-results/binary/integTest")

        reports {
            html.destination = file("${buildDir}/reports/integTest")
            junitXml.destination = file("${buildDir}/integTest-results")
        }

        mustRunAfter test
    }

    check.dependsOn integTest

    dependencies {
        integTestCompile sourceSets.main.output
        integTestCompile sourceSets.test.output
        integTestCompile configurations.compile
        integTestCompile configurations.testCompile
        integTestRuntime configurations.runtime
        integTestRuntime configurations.testRuntime
    }

    gradle.projectsEvaluated {
        def unitTestTasks = []
        gradle.rootProject.allprojects { project ->
            unitTestTasks.addAll(project.tasks.findAll { it.name == 'test' })
        }
        unitTestTasks.each { unitTestTask ->
            project.integTest.mustRunAfter unitTestTask
        }
    }

    idea {
        module {
            testSourceDirs += files(sourceSets.integTest.allSource.srcDirs)
        }
    }
}
