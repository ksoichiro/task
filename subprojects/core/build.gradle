buildscript {
    repositories {
        jcenter()
    }
}

configurations {
    provided
}

dependencies {
    provided "com.querydsl:querydsl-apt"
    compile "com.querydsl:querydsl-jpa"
}

def querydslDir = file('src/main/generated')

task generateQuerydsl(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.provided
    destinationDir = querydslDir
    options.compilerArgs += [
        '-proc:only',
        '-processor', [
            'com.querydsl.apt.jpa.JPAAnnotationProcessor',
            // To use @__ in Lombok @AllArgsConstructor.onConstructor,
            // add Lombok's annotation processor for Querydsl code generation
            // https://github.com/ewerk/gradle-plugins/issues/59
            'lombok.launch.AnnotationProcessorHider$AnnotationProcessor',
        ].join(',')
    ]
}

compileJava {
    dependsOn generateQuerydsl
    sourceSets.main.java.srcDir querydslDir
}

clean {
    delete querydslDir
}

task processSql {
    def sqlFile = file("src/main/sql/data.sql")
    def sqlSchemaFile = file("src/main/sql/schema.sql")
    def h2File = file("src/main/resources/data-h2.sql")
    def h2SchemaFile = file("src/main/resources/schema-h2.sql")
    def mariadbFile = file("src/main/resources/data-mariadb.sql")
    def mariadbSchemaFile = file("src/main/resources/schema-mariadb.sql")
    inputs.files sqlFile, sqlSchemaFile
    outputs.files h2File, h2SchemaFile, mariadbFile, mariadbSchemaFile
    doLast {
        h2File.withWriter { writer ->
            sqlFile.eachLine { line ->
                if (!line.startsWith("set ")) {
                    writer.println(line)
                }
            }
        }
        h2SchemaFile.withWriter { writer ->
            sqlSchemaFile.eachLine { line ->
                writer.println(line.replaceAll("datetime\\([0-9]*\\)", "datetime"))
            }
        }
        copy {
            from sqlFile
            into "src/main/resources"
            rename "data.sql", "data-mariadb.sql"
        }
        copy {
            from sqlSchemaFile
            into "src/main/resources"
            rename "schema.sql", "schema-mariadb.sql"
        }
    }
}
processResources.dependsOn 'processSql'
